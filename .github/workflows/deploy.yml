name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application for static deployment
      run: |
        # Create a temporary tailwind config in client directory
        cat > client/tailwind.config.temp.ts << 'EOF'
        import type { Config } from "tailwindcss";

        export default {
          darkMode: ["class"],
          content: ["./index.html", "./src/**/*.{js,jsx,ts,tsx}"],
          theme: {
            extend: {
              borderRadius: {
                lg: "var(--radius)",
                md: "calc(var(--radius) - 2px)",
                sm: "calc(var(--radius) - 4px)",
              },
              colors: {
                background: "var(--background)",
                foreground: "var(--foreground)",
                card: {
                  DEFAULT: "var(--card)",
                  foreground: "var(--card-foreground)",
                },
                popover: {
                  DEFAULT: "var(--popover)",
                  foreground: "var(--popover-foreground)",
                },
                primary: {
                  DEFAULT: "var(--primary)",
                  foreground: "var(--primary-foreground)",
                },
                secondary: {
                  DEFAULT: "var(--secondary)",
                  foreground: "var(--secondary-foreground)",
                },
                muted: {
                  DEFAULT: "var(--muted)",
                  foreground: "var(--muted-foreground)",
                },
                accent: {
                  DEFAULT: "var(--accent)",
                  foreground: "var(--accent-foreground)",
                },
                destructive: {
                  DEFAULT: "var(--destructive)",
                  foreground: "var(--destructive-foreground)",
                },
                border: "var(--border)",
                input: "var(--input)",
                ring: "var(--ring)",
                chart: {
                  "1": "var(--chart-1)",
                  "2": "var(--chart-2)",
                  "3": "var(--chart-3)",
                  "4": "var(--chart-4)",
                  "5": "var(--chart-5)",
                },
                sidebar: {
                  DEFAULT: "var(--sidebar-background)",
                  foreground: "var(--sidebar-foreground)",
                  primary: "var(--sidebar-primary)",
                  "primary-foreground": "var(--sidebar-primary-foreground)",
                  accent: "var(--sidebar-accent)",
                  "accent-foreground": "var(--sidebar-accent-foreground)",
                  border: "var(--sidebar-border)",
                  ring: "var(--sidebar-ring)",
                },
              },
              keyframes: {
                "accordion-down": {
                  from: { height: "0" },
                  to: { height: "var(--radix-accordion-content-height)" },
                },
                "accordion-up": {
                  from: { height: "var(--radix-accordion-content-height)" },
                  to: { height: "0" },
                },
              },
              animation: {
                "accordion-down": "accordion-down 0.2s ease-out",
                "accordion-up": "accordion-up 0.2s ease-out",
              },
            },
          },
          plugins: [require("tailwindcss-animate"), require("@tailwindcss/typography")],
        } satisfies Config;
        EOF
        
        # Create a temporary vite config in client directory with proper aliases
        cat > client/vite.config.temp.ts << 'EOF'
        import { defineConfig } from "vite";
        import react from "@vitejs/plugin-react";
        import path from "path";

        export default defineConfig({
          plugins: [react()],
          resolve: {
            alias: {
              "@": path.resolve(__dirname, "src"),
              "@shared": path.resolve(__dirname, "..", "shared"),
              "@assets": path.resolve(__dirname, "..", "attached_assets"),
            },
          },
          css: {
            postcss: {
              plugins: [
                require("tailwindcss")({ config: "./tailwind.config.temp.ts" }),
                require("autoprefixer"),
              ],
            },
          },
          build: {
            outDir: "../dist",
            emptyOutDir: true,
          },
          base: "./",
        });
        EOF
        cd client
        npx vite build --config vite.config.temp.ts
      env:
        NODE_ENV: production
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4